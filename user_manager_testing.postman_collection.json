{
	"info": {
		"_postman_id": "757c8063-ad54-48d6-bd28-ff31f113a7e9",
		"name": "user_manager_testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46498813"
	},
	"item": [
		{
			"name": "Auth: Get Superuser Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Has access token\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.access_token).to.be.a('string');",
							"    pm.collectionVariables.set(\"superuser_token\", json.access_token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{admin}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{admin_pass}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/token",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Create Test User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.email).to.eql(\"test_user@example.com\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{test_user_email}}\",\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": true,\n    \"age\": 30,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Create Test 1 User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.email).to.eql(\"test_user1@example.com\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{test_user1_email}}\",\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": false,\n    \"age\": 50,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Create Test 2 User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.email).to.eql(\"test_user2@example.com\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{test_user2_email}}\",\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": true,\n    \"age\": 90,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Create Test 4 User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.email).to.eql(\"test_user4@example.com\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{test_user4_email}}\",\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": true,\n    \"age\": 30,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Update Test User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.age).to.eql(25);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": true,\n    \"age\": 25,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Block User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User blocked\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.is_active).to.eql(false);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": true,\n    \"age\": 30,\n    \"is_active\": false,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user4_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user4_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: View all Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains exactly 5 users\", function() {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    ",
							"    pm.expect(responseData).to.have.lengthOf(5);",
							"    ",
							"    if (responseData.length > 0) {",
							"        const firstUser = responseData[0];",
							"        pm.expect(firstUser).to.have.all.keys(",
							"            'id', 'email', 'name', 'gender', ",
							"            'age', 'is_active', 'is_superuser'",
							"        );",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: View all Users by age range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains exactly 3 users\", function() {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    ",
							"    pm.expect(responseData).to.have.lengthOf(3);",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users?min_age=29&max_age=51",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "min_age",
							"value": "29"
						},
						{
							"key": "max_age",
							"value": "51"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: View all Users by gender",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Filter by gender: female only\", () => {",
							"    const users = pm.response.json();",
							"",
							"    users.forEach(user => {",
							"        pm.expect(user.gender).to.be.false;",
							"    });",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users?gender=false",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: View user by email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User found\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.email).to.eql(\"test_user@example.com\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth: Get User Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Has access token\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.access_token).to.be.a('string');",
							"    pm.collectionVariables.set(\"user_token\", json.access_token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{test_user_email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{test_user_password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/token",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "View user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Check user data\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.email).to.eql(\"test_user@example.com\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/me",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Profile updated\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.name).to.eql(\"Updated User\");",
							"    pm.expect(json.age).to.eql(25);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Updated User\",\n    \"password\": \"{{test_user_password}}\",\n    \"gender\": true,\n    \"age\": 25\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/me",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "User: Create Test User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{test_user3_email}}\",\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": true,\n    \"age\": 30,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User: Update Test User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{test_user3_email}}\",\n    \"password\": \"{{test_user_password}}\",\n    \"name\": \"Test User\",\n    \"gender\": false,\n    \"age\": 30,\n    \"is_active\": true,\n    \"is_superuser\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user3_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user3_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User: View all Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User: View user by email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user3_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user3_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth: Get blocked User Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Has access token\", () => {",
							"    const json = pm.response.json();",
							"    pm.expect(json.access_token).to.be.a('string');",
							"    pm.collectionVariables.set(\"user_token\", json.access_token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{test_user4_email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{test_user_password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/token",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "View blocked user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 403\", () => pm.response.to.have.status(403));",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/me",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "User: Update Blocked User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test User\",\n    \"gender\": false,\n    \"age\": 30\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/me",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Remove user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Remove user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user1_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user1_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Remove user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user2_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user2_email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin: Remove user 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{superuser_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{test_user4_email}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{test_user4_email}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "password",
				"value": "{{admin_pass}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{admin}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{base_url}}/api/v1/auth/token",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "tester",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "password_credentials",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "superuser_token",
			"value": ""
		},
		{
			"key": "test_user_id",
			"value": ""
		},
		{
			"key": "user_token",
			"value": ""
		}
	]
}